generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model customers {
  id     String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name   String   @db.VarChar(255)
  phone  String?  @db.VarChar(15)
  email  String?  @unique @db.VarChar(255)
  type   String?  @db.VarChar(50)
  doc_id String?  @unique @db.VarChar(50)
  orders orders[]
}

model items {
 item_id      String        @id @default(uuid()) @db.Uuid
  sku         String        @unique @db.VarChar(50)
  brand       String?       @db.VarChar(100)
  description String?
  price       Decimal       @db.Decimal(10, 2)
  images      String[]      
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
}

model order_items {
  id           String    @id @default(uuid()) @db.Uuid
  order_id     String    @db.Uuid
  sku          String    @db.VarChar(50)
  qty          Int
  price        Decimal   @db.Decimal(10, 2)
  total_amount Decimal?  @db.Decimal(10, 2)
  created_at   DateTime? @default(now()) @db.Timestamp(6)
  updated_at   DateTime? @default(now()) @db.Timestamp(6)
  orders       orders    @relation(fields: [order_id], references: [order_id], onDelete: Cascade, onUpdate: NoAction, map: "fk_order")
  items        items     @relation(fields: [sku], references: [sku], onDelete: Cascade, onUpdate: NoAction, map: "fk_sku")
}

model orders {
  order_id     String        @id @default(uuid()) @db.Uuid
  customer_id  String        @db.Uuid
  order_date   DateTime      @default(now()) @db.Timestamp(6)
  total_amount Decimal?      @db.Decimal
  order_items  order_items[]
  customers    customers     @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
